<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Scratch Addons</title><link>https://scratchaddons.com/</link><description>Recent content on Scratch Addons</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://scratchaddons.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Addon Basics</title><link>https://scratchaddons.com/docs/develop/getting-started/addon-basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/develop/getting-started/addon-basics/</guid><description>What&amp;rsquo;s an addon, really? Actually, an addon isn&amp;rsquo;t much more than a combination of at least one of these: persistent scripts, userscripts and userstyles. If any of these are related, then we make them part of the same addon, under a single name. For example, the &amp;ldquo;Scratch 3 Developer Tools&amp;rdquo; addon has a userscript in charge of adding a find box to the editor, and a userstyle that adds CSS to that box.</description></item><item><title>addon.self</title><link>https://scratchaddons.com/docs/reference/addon-api/addon.self/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/reference/addon-api/addon.self/</guid><description>Available in userscripts ✔️ Available in persistent scripts ✔️ Available in popup scripts ✔️ Required manifest permissions None Description Allows addons to get information about themselves or the browser.
Examples Using addon.self.dir With addon.self.dir, we can get the URL to an image inside the addon&amp;rsquo;s directory.
const img = document.createElement(&amp;#34;img&amp;#34;); img.src = addon.</description></item><item><title>addon.tab.traps (Traps)</title><link>https://scratchaddons.com/docs/reference/addon-api/addon.tab/addon.tab.traps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/reference/addon-api/addon.tab/addon.tab.traps/</guid><description>This page is out of date and is in need of a rewrite. If you know anything about traps, please contribute!
addon.tab.traps is a public API for userscripts that can be used to obtain objects that are not otherwise available. The actual traps are coded at prototype-handler.
They share some APIs with &amp;ldquo;Once&amp;rdquo; traps, but is very different and is documented at Fake redux state separately.
Examples editor-stepping addon shows how to manipulate Thread object trapped.</description></item><item><title>Quick Start</title><link>https://scratchaddons.com/docs/getting-started/quick-start/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/getting-started/quick-start/</guid><description>Installing Let&amp;rsquo;s get started by installing Scratch Addons. Scratch Addons is available in both Chrome Web Store and Add-ons for Firefox.
Chrome Web Store (for Google Chrome and other Chromium-based browsers) Add-ons for Firefox (for Mozilla Firefox) Getting started To get started, you need to access the settings page of the addon to see the functions of it.
Locate Scratch Addons on the toolbar and click it.</description></item><item><title>addon.settings</title><link>https://scratchaddons.com/docs/reference/addon-api/addon.settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/reference/addon-api/addon.settings/</guid><description>Available in userscripts ✔️ Available in persistent scripts ✔️ Available in popup scripts ✔️ Required manifest permissions None Description Allows addons to change their behavior according to user-specified addon settings.
Examples Reacting to settings change addon.settings.addEventListener(&amp;#34;change&amp;#34;, function() { console.log(&amp;#34;Settings changed!&amp;#34;); if(addon.settings.get(&amp;#34;removeIdeasBtn&amp;#34;) === true &amp;amp;&amp;amp; tipsButtonShown === false) showTipsButton(); else if(addon.settings.get(&amp;#34;removeIdeasBtn&amp;#34;) === false &amp;amp;&amp;amp; tipsButtonShown === true) hideTipsButton(); }); Methods addon.</description></item><item><title>addon.tab.redux (Redux)</title><link>https://scratchaddons.com/docs/reference/addon-api/addon.tab/addon.tab.redux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/reference/addon-api/addon.tab/addon.tab.redux/</guid><description>Scratch Addons supports getting and modifying Redux state!
Keep in mind Redux only applies on new page (ones with new navigation bar, including editor) Some extensions conflict with ScratchAddons' Redux feature. Do not use this when unnecessary. We expect readers to have basic knowledge on Redux and Scratch&amp;rsquo;s reducers. Get redux state addon.tab.redux.state stores current Redux state. For example, to get message count: addon.tab.redux.state.messageCount.messageCount
Events addon.tab.redux.addEventListener(&amp;quot;statechanged&amp;quot;, callback) to add event listeners for state changes.</description></item><item><title>Installing</title><link>https://scratchaddons.com/docs/getting-started/installing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/getting-started/installing/</guid><description>From extension stores Scratch Addons is available in both Chrome Web Store and Add-ons for Firefox.
Chrome Web Store (for Google Chrome, Opera, Brave, Vivaldi, Microsoft Edge (&amp;gt;79), and other Chromium-based browsers)
https://chrome.google.com/webstore/detail/fbeffbjdlemaoicjdapfpikkikjoneco Add-ons for Firefox (for Mozilla Firefox)
https://addons.mozilla.org/firefox/addon/scratch-messaging-extension/ From source About GitHub releases The releases page contains the code and installation files for all development builds of Scratch Addons, as well as the mirror of the store builds.</description></item><item><title>Security Policy</title><link>https://scratchaddons.com/docs/policies/security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/policies/security/</guid><description>Supported Versions Scratch Addons should not have any security issues in its most recent version, found in the Chrome Web Store and Addons for Firefox.
We only officially support the most recent stable versions of Chrome and Firefox. However, if you found a vulnerability that only occurs if using an old browser version, please report it (see below).
Reporting a Vulnerability If you find a vulnerability within Scratch Addons (any repository belonging to the organization) please contact World_Languages privately by emailing worldxlanguages (at) gmail.</description></item><item><title>addon.auth</title><link>https://scratchaddons.com/docs/reference/addon-api/addon.auth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/reference/addon-api/addon.auth/</guid><description>Available in userscripts ✔️ Available in persistent scripts ✔️ Available in popup scripts ✔️ Required manifest permissions None Description Allows addons to get information about the current Scratch account session.
Examples Reacting to auth info change addon.auth.addEventListener(&amp;#34;change&amp;#34;, async function() { console.log(await addon.auth.fetchIsLoggedIn()); }); Properties addon.auth.scratchLang Type String Nullable No Language of the Scratch website.</description></item><item><title>addon.tab.appendToSharedSpace</title><link>https://scratchaddons.com/docs/reference/addon-api/addon.tab/addon.tab.appendtosharedspace/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/reference/addon-api/addon.tab/addon.tab.appendtosharedspace/</guid><description>Description Allows multiple addons to add their own UI elements to the same area inside Scratch.
The important part of this API is the order number, which prevents the appending new UI elements from being a racy operation and the order of the buttons varying impredictively, specially in the cases where the addons support dynamicEnable.
Method Parameter Type Required Description options Object Yes Property Type Required Description space String Yes The ID of the space where the element should be appended.</description></item><item><title>Creating an Addon</title><link>https://scratchaddons.com/docs/develop/getting-started/creating-an-addon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/develop/getting-started/creating-an-addon/</guid><description>Required software: text editor, Chrome.
If possible, disable the Scratch Addons extension you downloaded from the store before proceeding to avoid issues.
Step 1: Read about addon basics Make sure to read that article to be familiar with the terminology.
Step 2: Fork/clone the repo Or download as ZIP, if you want. In other words, just download the source code locally.
Step 3: Load the extension into Chrome Note: Chrome is recommended for working on addons.</description></item><item><title>addon.account</title><link>https://scratchaddons.com/docs/reference/addon-api/addon.account/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/reference/addon-api/addon.account/</guid><description>Available in userscripts ✔️ Available in persistent scripts ✔️ Available in popup scripts ✔️ Required manifest permissions None Description Allows addons to execute actions in the currently logged in Scratch user.
Methods getMsgCount Return value Promise&amp;lt;Number | null Gets the unread message count of the currently logged in user.</description></item><item><title>addon.notifications</title><link>https://scratchaddons.com/docs/reference/addon-api/addon.notifications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/reference/addon-api/addon.notifications/</guid><description>Available in userscripts ❌ Available in persistent scripts ✔️ Available in popup scripts ❌ Required manifest permissions notifications Description Allows addons to create browser notifications. This API slightly differs from the browser.notifications API extensions can use.
Example General example addon.notifications.create({ type: &amp;#34;basic&amp;#34;, title: &amp;#34;Hello from notification!&amp;#34;, iconUrl: &amp;#34;/images/icon.png&amp;#34;, message: &amp;#34;Hi!&amp;#34;, buttons: [ { title: &amp;#34;Button 1&amp;#34;, }, { title: &amp;#34;Button 2&amp;#34;, }, ], }); addon.</description></item><item><title>addon.badge</title><link>https://scratchaddons.com/docs/reference/addon-api/addon.badge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/reference/addon-api/addon.badge/</guid><description>Available in userscripts ❌ Available in persistent scripts ✔️ Available in popup scripts ❌ Required manifest permissions badge Note: currently only one addon (msg-count-badge) can use this API. Do not use it in your addon without discussing on GitHub first.
Description Allows addons to display a badge, a bit of text that is layered over the extension icon, frequently a number.</description></item><item><title>addon.popup</title><link>https://scratchaddons.com/docs/reference/addon-api/addon.popup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/reference/addon-api/addon.popup/</guid><description>Available in userscripts ❌ Available in persistent scripts ❌ Available in popup scripts ✔️ Required manifest permissions None Description Allows addon popup scripts to get information about the popup context.
Properties addon.popup.isFullscreen Type Boolean Nullable No Whether the current popup is displayed in fullscreen.
addon.popup.isLightMode Type Boolean Nullable No Whether the user has enabled light mode on Scratch Addons settings.</description></item><item><title>Frequently Asked Questions</title><link>https://scratchaddons.com/docs/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/faq/</guid><description>This page lists frequently asked questions related to the Scratch Addons extension and project.
What is Scratch Addons? Scratch Addons is an &amp;ldquo;all-in-one&amp;rdquo; browser extension for the Scratch website and project editor. It provides features and themes (called addons internally), both for the Scratch website and the project editor. Scratch Addons' mission is to combine all existing Scratch extensions, userscripts and userstyles, developed by several members of the Scratch community, into a single easy-to-access place, while still letting users choose which ones to enable.</description></item><item><title>Chrome Web Store Privacy Information</title><link>https://scratchaddons.com/docs/policies/chrome-web-store-privacy-information/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/policies/chrome-web-store-privacy-information/</guid><description>This is how we fill the &amp;ldquo;privacy practices&amp;rdquo; form on the Chrome Web Store Developer Dashboard.
Single purpose Allows users to customize their experience on the Scratch website (scratch.mit.edu) by providing previously unavailable features - including many related to reading and replying of Scratch messages/notifications. This extension makes use of the &amp;ldquo;Scratch API&amp;rdquo; (api.scratch.mit.edu).
Permission justification Permission Justification Host permission Used to access information from, and run content scripts on the Scratch website.</description></item><item><title>Adding an Icon to a Setting Name</title><link>https://scratchaddons.com/docs/develop/adding-an-icon-to-a-setting-name/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/develop/adding-an-icon-to-a-setting-name/</guid><description>To add an icon to a setting name without causing crashes,
Make sure the icon file name does not contain hyphens Write @ICONFILENAME.svg setting name on addon.json Add ICONFILENAME.svg at /images/icons/ if missing Edit /background/load-addon-manifests.js to add iconfilenameIcon: &amp;quot;@ICONFILENAME.svg&amp;quot;, Edit /addons/scratch-notifier/background.js for Scratch Notifier settings</description></item><item><title>Addon Manifest</title><link>https://scratchaddons.com/docs/reference/addon-manifest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/reference/addon-manifest/</guid><description>Some parts of this documentation may be missing or outdated. You can help improving this page.
Do not hesitate to ask questions regarding this by using the provided channels.
Addons are located inside the addons folder. Each addon is inside its own folder as well. In order to tell the addon loader how the addon plans to work, addons use a standard addon.json file located at the root of the addon&amp;rsquo;s folder.</description></item><item><title>Addons</title><link>https://scratchaddons.com/addons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/addons/</guid><description>Addons This page lists all of the addons that are implemented on Scratch Addons.
This page is incomplete, and we need your help to complete the images. Read more here.
List view In this page, an easter egg addon will have an egg symbol besides its name.' data-toggle="tooltip" data-placement="left" data-html="true"Easter egg 2D color picker 2d-color-picker Replaces saturation and brightness sliders in the costume editor with a 2D color picker.</description></item><item><title>Changelog</title><link>https://scratchaddons.com/changelog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/changelog/</guid><description>Changelog All notable changes to this project will be documented in this page.
Note: This changelog is summarised. Check the detailed changelog for all of the changes.
v1.22.0 2021-11-10 Latest ¶ Video &amp;times; if (!document.querySelector("script[src='https://scratchaddons.com/assets/js/player-modal.js']")) { const script = document.createElement("script") script.type = "module" script.defer = "" script.src = "/assets/js/player-modal.js" document.head.appendChild(script) } Highlights New addon: &amp;ldquo;switch variables between &amp;lsquo;For all sprites&amp;rsquo; and &amp;lsquo;For this sprite only&amp;rsquo;&amp;rdquo;, which allows changing the scope of variables and lists and whether variables are stored in the cloud.</description></item><item><title>Contributors</title><link>https://scratchaddons.com/contributors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/contributors/</guid><description>Contributors Many thanks to these amazing people for contributing to the project by working on Scratch Addons, its features, its themes, its website, etc. (emoji key)
This project follows the all-contributors specification. Commits are also added outside the specification.
Contributions of any kind welcome!
Have contributed in any way? Read how to put your name here.
View the contributors repository here.</description></item><item><title>Design</title><link>https://scratchaddons.com/docs/reference/design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/reference/design/</guid><description>Icons We use iconify UIL (Unicons) icons. See them at https://iconify.design/icon-sets/uil/. Please only use icons from this set unless you have explicit permission to use another set. When adding an icon, download it to /images/icons/iconname.svg.
Colors Our color theme is orange #ff7b26 and white #fff. These colors make up the top bar on our webpages, as well as some other elements.
For our (default) dark theme, our main colors are #2a2a2a #222 #000.</description></item><item><title>Extension Privacy Policy</title><link>https://scratchaddons.com/docs/policies/privacy/extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/policies/privacy/extension/</guid><description>Last updated: 28 May 2021
This page informs you of our policies regarding the collection, use, and disclosure of personal data when using the Scratch Addons extension and the choices you have associated with that data.
We use your data to provide and improve the service. By using the service, you agree to the collection and use of information in accordance with this policy.
&amp;ldquo;Extension&amp;rdquo; refers to our browser extension, which you can download from the Chrome Web Store or Add-ons for Firefox.</description></item><item><title>Extension Update (Transition)</title><link>https://scratchaddons.com/scratch-messaging-transition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/scratch-messaging-transition/</guid><description>Scratch Messaging Extension is now Scratch Addons! What happened? Scratch Messaging Extension (by griffpatch) has been updated and is now called Scratch Addons.
Click the Scratch Addons icon in the extension bar to check out the new redesigned messages summary!
Scratch Addons also includes many other Scratch related features. To enable them, go to Scratch Addons settings. For example, you can turn on Scratch Notifier to get browser notifications when you get new Scratch messages.</description></item><item><title>Farewell!</title><link>https://scratchaddons.com/farewell/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/farewell/</guid><description>Farewell! Scratch Addons has been uninstalled. We thank you for using the extension!
You may reinstall the extension by clicking the install button above. You can also leave a review on the Chrome extension page or the Firefox addon page.
Based of your reasons of uninstalling the extension, here are some other things that you can do.
Having problems? Please tell us here or create an issue here.</description></item><item><title>Joining the Localization Team</title><link>https://scratchaddons.com/docs/localization/joining-the-localization-team/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/localization/joining-the-localization-team/</guid><description>Already translated: Italian, Japanese, Portuguese, Slovenian and Spanish. We won&amp;rsquo;t be accepting any new translators for these languages
Thanks for being interested on volunteering to translate Scratch Addons to other languages!
Scratch Addons is a non-profit open source project where volunteer web developers maintain the extension and create its addons.
Even if you haven&amp;rsquo;t ever coded a single line of JavaScript, you can still help us achieve our goal of making everyone&amp;rsquo;s experience with Scratch better!</description></item><item><title>Localizing Addons</title><link>https://scratchaddons.com/docs/localization/localizing-addons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/localization/localizing-addons/</guid><description>Localizing addons is easy.
Adding messages Under addons-l10n/en/, make a file named ADDONID.json, where ADDONID is the addon&amp;rsquo;s ID (the folder name). Write your messages that you want to translate there:
{ &amp;#34;ADDONID/meow&amp;#34;: &amp;#34;Meow&amp;#34;, &amp;#34;ADDONID/cats&amp;#34;: &amp;#34;{number, plural, one {1 cat} other {# cats}}&amp;#34;, &amp;#34;ADDONID/eat&amp;#34;: &amp;#34;I want to eat {food}!&amp;#34;, &amp;#34;ADDONID/salmon&amp;#34;: &amp;#34;salmon&amp;#34;, &amp;#34;ADDONID/sardine&amp;#34;: &amp;#34;sardine&amp;#34; } Placeholders Sometimes messages need to have things that are dynamically generated. For example, number of cats, or input.</description></item><item><title>Persistent Scripts</title><link>https://scratchaddons.com/docs/develop/addon-types/persistent-scripts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/develop/addon-types/persistent-scripts/</guid><description>It&amp;rsquo;s recommended to avoid persistent scripts when possible. A future migration to Manifest V3 will require us to use service workers instead of background pages, making persistent scripts a challenge. The fewer persistent scripts there are when we migrate, the better.
What are they? Persistent scripts allow you to run JavaScript in the background! They&amp;rsquo;re awesome to notify the user about stuff, or preload data so it&amp;rsquo;s ready when the user needs it.</description></item><item><title>Send Feedback</title><link>https://scratchaddons.com/feedback/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/feedback/</guid><description>Send Feedback Have something to say about Scratch Addons? Let us know through this feedback form.
window.i18nStrings = { statusSending: 'Sending...', statusSuccess: 'Sent! Thanks for the feedback.', statusFailed: 'Something went wrong. Try sending again?' } Scratch username, or other identifiers (optional) Feedback Send list of my currently enabled addons (recommended) Send Alternatives In case you need an alternative, here are some choices.</description></item><item><title>Unsupported Browser</title><link>https://scratchaddons.com/unsupported-browser/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/unsupported-browser/</guid><description>Unsupported Browser Scratch Addons doesn't support the browser you're using. Use updated versions of Chrome, Firefox, or other browsers based on them to get started:
Chromium 80+ Chrome 80+ Download How to update Microsoft Edge 80+ Download How to update Opera 67+ Download How to update Brave 1.3+ Download Vivaldi 2.</description></item><item><title>Userscripts</title><link>https://scratchaddons.com/docs/develop/addon-types/userscripts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/develop/addon-types/userscripts/</guid><description>What are they? Userscripts allow you to run code along Scratch pages - you can do stuff like add buttons, enhance the Scratch editor, or anything you can imagine.
How do I add a userscript? Make sure to refresh Scratch Addons from chrome://extensions after doing any changes to your addon.
Go to the manifest of your addon (addon.json) and add a property called userscripts&amp;quot;.
This property must be an array.</description></item><item><title>Userstyles</title><link>https://scratchaddons.com/docs/develop/addon-types/userstyles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/develop/addon-types/userstyles/</guid><description>What are they? Userstyles allows you to inject CSS on the Scratch website - useful to make the buttons you add with userscripts colorful, or to customize native Scratch element.
How do I add a userstyle? Make sure to refresh Scratch Addons from chrome://extensions after doing any changes to your addon.
Go to the manifest of your addon (addon.json) and add a property called &amp;quot;userstyles&amp;quot;.
This property must be an array.</description></item><item><title>Website Privacy Policy</title><link>https://scratchaddons.com/docs/policies/privacy/website/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/docs/policies/privacy/website/</guid><description>Last updated: 28 May 2021
This page informs you of our policies regarding the collection, use, and disclosure of personal data when using the Scratch Addons website (https://scratchaddons.com) and the choices you have associated with that data.
We use your data to provide and improve the website. By using the website, you agree to the collection and use of information in accordance with this policy.
&amp;ldquo;Website&amp;rdquo; refers to to the Scratch Addons website (https://scratchaddons.</description></item><item><title>Welcome!</title><link>https://scratchaddons.com/welcome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://scratchaddons.com/welcome/</guid><description>Welcome! Scratch Addons has been installed successfully!
Thank you for installing. We hope you enjoy the extension!
Getting started Step 1 Click the Scratch Addons extension icon It is on the top-right corner of your browser. Google Chrome users need to click the puzzle icon to find the icon.
Step 2 Press the gear icon to go to the Settings page This will open the Settings page where you can configure how the extension works.</description></item></channel></rss>